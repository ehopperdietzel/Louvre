/* Generated by wayland-scanner 1.20.92 */

#ifndef LOUVRE_DOCK_CLIENT_PROTOCOL_H
#define LOUVRE_DOCK_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_louvre_dock The louvre_dock protocol
 * @section page_ifaces_louvre_dock Interfaces
 * - @subpage page_iface_dock - Bla bla bla...
 * @section page_copyright_louvre_dock Copyright
 * <pre>
 *
 * Copyright Â© 2013-2016 Collabora, Ltd.
 * </pre>
 */
struct dock;

#ifndef DOCK_INTERFACE
#define DOCK_INTERFACE
/**
 * @page page_iface_dock dock
 * @section page_iface_dock_desc Description
 *
 * Bla bla bla...
 * @section page_iface_dock_api API
 * See @ref iface_dock.
 */
/**
 * @defgroup iface_dock The dock interface
 *
 * Bla bla bla...
 */
extern const struct wl_interface dock_interface;
#endif

#define DOCK_DESTROY 0
#define DOCK_TEST 1


/**
 * @ingroup iface_dock
 */
#define DOCK_DESTROY_SINCE_VERSION 1
/**
 * @ingroup iface_dock
 */
#define DOCK_TEST_SINCE_VERSION 1

/** @ingroup iface_dock */
static inline void
dock_set_user_data(struct dock *dock, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) dock, user_data);
}

/** @ingroup iface_dock */
static inline void *
dock_get_user_data(struct dock *dock)
{
	return wl_proxy_get_user_data((struct wl_proxy *) dock);
}

static inline uint32_t
dock_get_version(struct dock *dock)
{
	return wl_proxy_get_version((struct wl_proxy *) dock);
}

/**
 * @ingroup iface_dock
 *
 * Bla bla bla...
 */
static inline void
dock_destroy(struct dock *dock)
{
	wl_proxy_marshal_flags((struct wl_proxy *) dock,
			 DOCK_DESTROY, NULL, wl_proxy_get_version((struct wl_proxy *) dock), WL_MARSHAL_FLAG_DESTROY);
}

/**
 * @ingroup iface_dock
 *
 * Bla bla bla...
 */
static inline void
dock_test(struct dock *dock, wl_fixed_t x, wl_fixed_t y, wl_fixed_t width, wl_fixed_t height)
{
	wl_proxy_marshal_flags((struct wl_proxy *) dock,
			 DOCK_TEST, NULL, wl_proxy_get_version((struct wl_proxy *) dock), 0, x, y, width, height);
}

#ifdef  __cplusplus
}
#endif

#endif
